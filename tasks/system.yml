---
##======================================= ZFS =========================================##
#########################################################################################

- name: Create docker dataset
  become: true
  community.general.zfs:
    name: zroot/docker
    state: present
    extra_zfs_properties:
      mountpoint: /docker
      dedup: on

- name: Make zfs snapshots visible under /.zfs/snapshot/
  become: true
  shell: "zfs set snapdir=visible {{ dotfiles_root_zfs_dataset }}"
  changed_when: false

##===================================== SYSTEMD =======================================##
#########################################################################################

- name: Ensure service systemd-networkd-wait-online is masked
  ansible.builtin.systemd_service:
    name: systemd-networkd-wait-online
    masked: true
  changed_when: false

- name: "disable any action on close lid"
  become: true
  lineinfile:
    path: "/etc/systemd/logind.conf"
    regexp: "^HandleLidSwitch.*"
    line: "HandleLidSwitch=ignore"

- name: Remove autorandr service
  become: true
  file:
    dest: /lib/systemd/system/autorandr.service
    state: absent
  register: autorandr_service

- name: Reload system-daemon
  become: true
  when: autorandr_service.changed
  shell: systemctl daemon-reload

##====================================== ETC ==========================================##
#########################################################################################

# https://github.com/openzfs/zfs/issues/9461#issuecomment-699889066
- name: /etc/fstab
  become: true
  ansible.builtin.copy:
    dest: /etc/fstab
    content: |
      {{ dotfiles_root_zfs_dataset }} / zfs defaults,noatime 0 0

- name: /etc/sanoid/sanoid.conf
  become: true
  ansible.builtin.copy:
    dest: /etc/sanoid/sanoid.conf
    content: |
      [{{ dotfiles_root_zfs_dataset }}]
          use_template = root

      [template_root]
          frequently = 3
          hourly = 3
          daily = 4
          monthly = 1
          yearly = 0
          autosnap = yes
          autoprune = yes

- name: /etc/profile.d/global_env.sh
  become: true
  ansible.builtin.copy:
    dest: /etc/profile.d/global_env.sh
    content: |
      #!/bin/sh

      export PATH=$PATH:~/.local/bin:~/.bin
      export BROWSER=google-chrome
      export EDITOR=nvim
      export VISUAL=nvim

- name: /etc/netplan/netcfg.yaml
  become: true
  ansible.builtin.copy:
    dest: /etc/netplan/netcfg.yaml
    content: |
      network:
        ethernets:
          all:
            match:
              name: e*
            dhcp4: true

##===================================== SECURITY ======================================##
#########################################################################################

- name: Ensure firewall is enabled
  become: true
  community.general.ufw:
    state: enabled
    default: deny

- name: Check ufw rules
  become: true
  command: "ufw status numbered | wc -l"
  register: ufw_status
  changed_when: false

- name: Reset firewall rules (remove any user alterations)
  become: true
  community.general.ufw:
    state: reset
  when: ufw_status.stdout_lines | length > 1

- name: Ensure firewall is enabled
  become: true
  community.general.ufw:
    state: enabled
    default: deny
  when: ufw_status.stdout_lines | length > 1

- name: Disallow SSH password authentication
  become: true
  lineinfile:
    dest: /etc/ssh/sshd_config
    regexp: "^PasswordAuthentication"
    line: "PasswordAuthentication no"
    state: present
  register: sshd_config

- name: Restart SSHD if configuration changed
  become: true
  service:
    name: ssh
    state: restarted
  when: sshd_config.changed

